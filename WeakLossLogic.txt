弱网模型分析，有效带宽波动、丢包，经常发生有效带宽低于实时负载预期的情况
维度：
1.实时负载，发送端的实时发送码率，发送的是实时数据。
2.有效带宽，弱网下的有效带宽可以简单描述为，略高实时负载需求一点，波动，存在丢包（可能因为超过有效带宽丢包，也可能是因为设备本身有丢包的缺陷）
3.重发策略，fec，nack
4.重发负载，非实时数据，也就是fec和nack占用的带宽。
5.总输出负载 = 重发负载+实时负载
6.遗留负载 = 总输出负载 - 有效带宽
7.额外带宽资源 = 有效带宽 - 实时负载

1.遗留负载的分布组成
观察一个最简单的场景：当有效带宽产生波动之后（有效带宽恢复到正常水平），发送端收到报告，确认有包丢失（或因报告超时、丢失而确认数据丢失），开始重发：
假设有效带宽70，总输出负载100 = 重发负载40 + 实时负载60
问题：第一次以100总输出负载发送后，遗留负载=30=总输出负载100-有效带宽70，遗留负载30的分布是什么样的？
整个网络层并不区分重发负载和实时负载，不停发送过程先后顺序也没有意义
从概率上粗略算，遗留负载30 = 40%重发负载 + 60%实时负载 = 12重发负载 + 18实时负载（第一次） 
这时候可以发现，遗留负载减少10剩30但没有清空，一部分实时负载进入到遗留负载。

重点：：整个网络层并不区分重发负载和实时负载，不停发送过程先后顺序也没有意义

第一次发送后，做一下简单标记，进入到遗留负载的18实时负载为第一次， 18实时负载（第一次） 
再一轮发送开始 总输出负载90 = 12重发负载 + 18实时负载（第一次） + 60实时负载
发送后遗留负载20 = 总输出负载90-有效带宽70
遗留负载20的分布 = 20*12/90重发负载 + 20*18/90实时负载(第一次) + 20*60/90实时负载(第二次)

可以观察到：
在不停的发送过程中，重发负载在逐步减小且比例越来越低，每一次新的实时负载都会混入遗留负载中，按照总输出负载中的比例。
接收端jitterbuffer各个位置概率性缺失数据，出现蜂窝化，阻碍数据提取。
接收端jitterbuffer的缺失数据分布几乎等价于遗留负载的数据分布。
如果把重发负载定义为第0次，后面实时发送一次为1，2，3，，，在遗留负载中越早发送的数据会随着发送次数增加而占比降低，最终一定概率为0。这是有前提的：有效带宽大于实时负载，存在额外带宽资源，不断消费并更新遗留负载分布。

重点：：接收端jitterbuffer的蜂窝化缺失数据分布几乎等价于发送端的遗留负载分布。

2.推论其他场景
例如更复杂更糟糕的场景：有效带宽波动更加频繁，非带宽因素的概率性丢包。
转换为额外带宽资源与需求讨论。
	1.如果额外带宽可以保持，最终消灭遗留负载。速度取决于额外带宽的大小和稳定性。
	2.如果额外带宽不能持续保持，不能高效消化遗留负载，但可以不断的降低其中较早的数据占比最终接近0。
	但jitterbuffer因延迟需求不可能过长，等待时间有限。一定概率出现jitterbuffer蜂窝化一直取不到完整数据，在超时后不停丢弃数据。
	3.更糟糕的场景，一般清空下更大概率jitterbuffer蜂窝化超时取不到任何数据，实时负载没有有效降低时会产生更大的遗留负载。
常用的50%退行策略与不断增加的遗留负载
	1.当网络中充斥着各种竞争性的网络协议，不断增大的遗留负载，进一步降低此网络下的所有数据通信质量。
	2.当网络中网络充满各种公平谦让的协议，能触发其他数据流的退让行为增加自己的额外带宽资源。
	一般极端弱网会存在与第一种情况下。保持自身的50%退行，并在工作网络中对贪婪自私的竞争性通信协议采取限制是有效的。例如一部分bt、迅雷、等等。
	
重点：：额外带宽资源，是否足够满足需求

预防逻辑：
类tenderline
出现弱网、丢包、极端情况后处理逻辑：
0.常规的50%退行。
1.通过根据传输延迟、遗留负载分布计算预判jitterbuffer数据因超时丢弃的可能性，即判断哪些数据再发送将是大概率无效的，剔除遗留负载中无效数据，也就是减少了遗留负载的总量。
2.统计当前网络有效带宽估算、遗留数据分布、遗留负载增减趋势，预判遗留负载完全消耗所需时间，预判大概率满足jitterbuffer连续提取数据的所需延迟时间（第一个jitterbuffer上第一个洞在超时前有多少概率可以到达）。
结合具体需求（平滑、延迟、卡顿等），动态调整降低码率，快速消费遗留负载。
3.极端情况没有空间再下调码率，有效带宽与实时负载的差值小，也可以选择直接扔掉所有遗留负载。
4.在有效带宽小于实时负载的情况下，不可能满足需求。单纯的调整码率之外，还可以增加音频降噪阈值减少无用数据量，同时降低视频码率和帧率，等。

相关：
1.控制采样码率
	有效带宽的合理估算，例如webrtc的卡尔曼滤波估算
	例如，丢包率与tenderline的退行触发
	常用的50%退行策略
	结合有效带宽的统计估算，降采样降低码率
2.jitterbuffer对蜂窝化处理策略与重发策略
	nack和fec有各自的优劣势场景，选择根据丢包场景特性和成本计算。
	极端的弱网环境下，利用好twcc报告，观察环境特点和需求，观察数据计算评估问题
		例如，判断遗留负载分布在当前有效带宽情况下，清空和概率性满足jitterbuffer所需消耗时间，对比需求允许的延迟范围，可以帮助判断当前码率（实时负载）是否合理或采用其他极端机制。
		极端情况下，码率已经无法再降低了，额外带宽资源不足以满足需求，通知清理jitterbuffer和遗留负载，从新开始以低于有效带宽的安全的实时负载发送。
3.工作链路中屏蔽掉贪婪自私协议，例如一部分bt，迅雷等
4.服务器端转发场景码率没有弹性，符合成本的前提下，例如对于音频流混合，重新编码低采样低码率，多档码率流，配合符合场景的重传机制。
5.懒得想了 欢迎补充
观察实际数据做出合理调整
